server {
	include /etc/nginx/commons.conf;
	include /etc/nginx/ssl-shutupandtakemycodes.conf;

    server_name r.shutupandtakemy.codes;
    client_max_body_size 0;
    chunked_transfer_encoding on;

    location / {
        sub_filter r.shutupandtakemy.codes shutupandtakemy.codes;
        sub_filter '<p>Made with <code>&lt;3</code> by <a href="https://github.com/jessfraz">@jessfraz</a></p>' '<p>Hosted by @pmh_only</p>';
        sub_filter '<p>Checkout the source code at: <a href="https://github.com/genuinetools/reg">github.com/genuinetools/reg</a></p>' '';
        sub_filter '<h1>r.shutupandtakemy.codes</h1>' '<h1>Public container image registry</h1>';
        sub_filter_once off;
        proxy_pass http://regdisplay:8080;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    location /v2/ {
        add_header 'Docker-Distribution-Api-Version' 'registry/2.0';
        if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
            return 404;
        }

        proxy_pass http://registry:5000;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }
}
