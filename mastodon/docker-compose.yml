version: '3'
services:
  db:
    restart: always
    image: postgres:14-alpine
    shm_size: 256mb
    networks:
      - mastodon
    expose:
      - "5432"
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    volumes:
      - ./data/postgres14:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}

  redis:
    restart: always
    image: redis:7-alpine
    networks:
      - mastodon
    expose:
      - "6379"
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./data/redis:/data

  mastodon:
    image: ghcr.io/mastodon/mastodon:latest
    restart: always
    env_file: .env
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - nginx
      - mastodon
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    expose:
      - "3000"
    depends_on:
      - db
      - redis
      # - es
    volumes:
      - ./data/system:/mastodon/public/system

  mastodon_stream:
    image: ghcr.io/mastodon/mastodon:latest
    restart: always
    env_file: .env
    command: node ./streaming
    networks:
      - mastodon
      - nginx
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    expose:
      - "4000"
    depends_on:
      - db
      - redis

  sidekiq:
    image: ghcr.io/mastodon/mastodon:latest
    restart: always
    env_file: .env
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
    networks:
      - mastodon
    volumes:
      - ./data/system:/mastodon/public/system
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]

networks:
  nginx:
    name: nginx
  mastodon:
    internal: true
